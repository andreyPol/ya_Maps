03
При разработке интерфейсов с использованием компонентной архитектуры часто
используются термины Presentational Сomponents и Сontainer Сomponents. Что
означают данные термины? Зачем нужно такое разделение, какие у него есть
плюсы и минусы

Сontainer Сomponents работают с данными: принимают их с сервера, обрабатывают, изменяют. А потом в виде props  передают их в Presentational Сomponents. Сами Presentational Сomponents делаются так, что они не зависят от  Сontainer Сomponent. Плюсы подхода в том, что можно использовать одни и те же Presentational Сomponents для отображения данных из разных Сontainer Сomponents. И сам код становится более структурированным и читабельным. Появляется больше возможностей для повторного использования компонентов. Минусы, как и у всех фреймворков, в том, что простое приложение проще склепать без них :)

04
Как устроено наследование в JS? Расскажите о своем опыте реализации JS-
наследования без использования фреймворков.

Если кратко: 
То, что должно быть унаследовано, нужно явно или неявно запихать в ссылку __proto__
Если подробнее:
Самописным наследованием пользуюсь редко, поэтому когда нужно его вспомнить, я читаю свои выписки и примеры по этому поводу. В свое время специально для этого я структурировал для себя свои знания в этом вопросе. Там довольно много кода, поэтому сюда копировать не буду. Больше всего мне нравится этот способ:

//параметры child, parent - это конструкторы объектов (классы), а не экземпляры классов

function inherits(child, parent){
  var F=function (){};
  F.prototype=parent.prototype;
  child.prototype=new F();
  child.prototype.constructor=child;
  child.superClass_=parent.prototype;
}


06
Вам нужно реализовать форму для отправки данных на сервер, состоящую из
нескольких шагов. В вашем распоряжении дизайн формы и статичная верстка, в
которой не показано, как форма должна работать в динамике. Подробного
описания, как должны вести себя различные поля в зависимости от действий
пользователя, в требованиях к проекту нет. Ваши действия?

Спрошу у "старшего по званию", важно ли это. Если не важно - сделаю так, как сам вижу.

08
Какие ресурсы вы используете для развития в профессиональной сфере? Приведите
несколько конкретных примеров (сайты, блоги и так далее).
Какие ещё области знаний, кроме тех, что непосредственно относятся к работе,
вам интересны?

Обычно, если мне что-то нужно, то спрашиваю у гугла. А с него уже перехожу на другие ресурсы. Как правило, это: learn.javascript.ru, w3schools.com, stackoverflow.com, developer.mozilla.org, youtube.com, reactjs.org, smashingmagazine.com, webref.ru, wikipedia.org и т.д.

В свое время смотрел видео курсы по AI на udacity и прочитал довольно толстую книгу "Искусственный интеллект.  Современный подход". Сейчас уже мало что вспомню, но было очень интересно. Особенно про логическое программирование. 

09
Расскажите нам немного о себе и предоставьте несколько ссылок на последние
работы, выполненные вами.

Очень хочу стать профессиональным программистом. Знаю, для junior-разработчика я немного староват (неделю назад исполнилось 30 :) ), но именно поэтому, я очень ценю шанс войти в реальную разработку даже на некоммерческой основе (финансовых накоплений хватит еще надолго).

О себе: по специальности не рабтал - в юности были проблемы со здоровьем - было малость не до того. Но это все уже в прошлом. После окончания университета пошел на стажировку к человеку, у которого своя команда фриланс-разработчиков. Но через 3 года ушел от него, потому что я хотел в реальный проект на фронтенд разработку. Но он не допускал до реальных проектов, пока не пройду весь его учебный курс (еще php, БД, ИБ, XML, алгоритмы и т.д.) И я не был уверен, есть ли у всего этого конец. Я ничего не имею против php, но я хотел изучать его параллельно с работой в реальной фронтенд разработке. На данный момент я хорошо знаю чистый js и css. Наш бывший наставник говорил, что фреймворки - это от лукавого, поэтому я сейчас изучаю React самостоятельно. Примеры моего кода можно посмотреть тут: https://yadi.sk/d/J2_l3UVYsuKyag 
Кроме того, что есть в этом архиве, у меня довольно много кода по алгоритмам, но к ним нет интерфейса( 